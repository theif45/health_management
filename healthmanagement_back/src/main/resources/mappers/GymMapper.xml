<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portfolio.healthmanagement.repository.GymRepository">
	
	<resultMap type="com.portfolio.healthmanagement.entity.User" id="userMap">
		<id property="userId" column="user_id"/>
		<result property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="birthDate" column="birth_date"/>
		<result property="provider" column="provider"/>
		<collection property="gymOwners" javaType="list" resultMap="gymOwnerMap" />
	</resultMap>
	
	<resultMap type="com.portfolio.healthmanagement.entity.GymOwner" id="gymOwnerMap">
		<id property="gymOwnerId" column="gym_owner_id"/>
		<result property="userId" column="user_id"/>
		<result property="gymId" column="gym_id"/>
		<association property="gym" resultMap="GymMap" />
	</resultMap>
	
	<resultMap type="com.portfolio.healthmanagement.entity.Gym" id="gymMap">
		<id property="gymId" column="gym_id"/>
		<result property="gymName" column="gym_name"/>
		<result property="gymAddress" column="gym_address"/>
		<result property="gymTel" column="gym_tel"/>
		<result property="businessNumber" column="business_number"/>
		<result property="gymPrice" column="gym_price"/>
		<result property="likeCount" column="like_count"/>
		<result property="registeDate" column="registe_date"/>
		<result property="removeDate" column="remove_date"/>
	</resultMap>
	
	<select id="searchGyms" parameterType="hashmap" resultMap="gymMap">
		select
			gt.gym_id,
			gt.gym_name,
			gt.gym_address,
			gt.gym_tel,
			gt.business_number,
			gt.gym_price,
		
			lc.like_count,
			
			got.gym_owner_id
		
		from
			gym_tb gt
		    left outer join gym_owner_tb got on(got.gym_id = gt.gym_id)
		    left outer join (select gym_id, count(*) as like_count from gym_like_tb group by gym_id) lc on(lc.gym_id = gt.gym_id)
		where
			1=1
			<if test='searchValue !=""'>
				and gt.gym_name like concat("%",#{searchValue}, "%")
			</if>
		order By
			gt.gym_id
			
		limit #{index},20;
		</select>
		
		<select id="getGym" parameterType="Integer" resultMap="gymMap">
			select
				gt.gym_id,
				gt.gym_name,
				gt.gym_address,
				gt.gym_tel,
				gt.business_number,
				gt.gym_price,
				
				got.gym_owner_id
			
			from
				gym_tb gt
			    left outer join gym_owner_tb got on(got.gym_id = gt.gym_id)
			where
				gt.gym_id = #{gymId}
		</select>
		
		<select id="getTotalCount" parameterType="hashMap" resultType="Integer">
			select 
		   		count(*)
			from
				gym_tb gt
		    	left outer join gym_owner_tb got on(got.gym_id = gt.gym_id)
			    left outer join user_tb ut on(got.user_id = ut.user_id)
			where
				1=1
				<if test='searchValue != ""'>
					and gt.gym_name like concat("%",#{searchValue},"%")
				</if>
		</select>
	
		<select id="getLikeCount" parameterType="Integer" resultType="Integer">
			select
				count(*)
			from
				gym_like_tb
			where
				gym_id = #{gymId}
		</select>
		
		<select id="getLikeStatus" parameterType="hashMap" resultType="Integer">
			select
				count(*)
			from
				gym_like_tb
			where
				gym_id = #{gymId}
			and user_id = #{userId}
		</select>
		
		
		<select id="findByBusinessNumber" parameterType="String" resultMap="gymMap">
			select
				gt.gym_id,
				gt.gym_name,
				gt.gym_address,
				gt.gym_tel,
				gt.business_number,
				gt.gym_price
			from
				gym_tb gt
			where
				gt.business_number = #{businessNumber}
		</select>
		
		<insert id="saveGym" parameterType="com.portfolio.healthmanagement.entity.Gym" useGeneratedKeys="true" keyProperty="gymId">
			insert into gym_tb
			values (0,#{gymName},#{gymAddress},#{gymTel},#{businessNumber},#{gymPrice},#{likeCount},#{registeDate},#{removeDate})		
		</insert>
		
		<insert id="saveGymOwner" parameterType="com.portfolio.healthmanagement.entity.GymOwner">
			insert into gym_owner_tb
			values(0,#{userId},#{gymId})
		</insert>
		
		

		<select id="nearbyGymAddressesAndGymName" parameterType="hashMap" resultMap="gymMap">
			select
				gym_address,
				gym_name
			from
				gym_tb
			where
				gym_address like concat("%",#{myAddress},"%")
		</select>
	
	<insert id="registerGymImgsDetail" parameterType="Integer">
		insert into gym_img_tb
		values 
		<foreach collection="list" item="postsImg" separator=",">
			(0, #{postsImg.gymId}, #{postsImg.originName}, #{postsImg.tempName},#{postsImg.imgSize})		
		</foreach>
	</insert>
	
		<select id="getImgs" parameterType="Integer"  resultType="com.portfolio.healthmanagement.entity.GymImgsDetail">
			select 
				git.gym_img_id as postsImgId,
				git.gym_id as gymId,
				git.origin_name as originName,
				git.temp_name as tempName
				
			from
				gym_img_tb git 
				
			where
				git.gym_id = #{gymId}
    	</select>
    	
    	<insert id="setLike">
			insert into gym_like_tb
			values (0, #{gymId}, #{userId})
		</insert>
	
		<delete id="disLike">
				delete
				from
					gym_like_tb
				where
					gym_id = #{gymId}
				and user_id = #{userId}
		</delete>
		
		<select id="likeGyms" parameterType="Integer"  resultType="com.portfolio.healthmanagement.entity.LikeList">
				select
				    gt.gym_id as gymId,
				    gt.gym_name as gymName,
				    gt.gym_address as gymAddress,
				    gt.gym_tel as gymTel,
				    gt.gym_price as gymPrice,
				    
				    ut.user_id as userId
				from
					gym_like_tb glt 
				    left outer join gym_tb gt on (gt.gym_id = glt.gym_id)
				    left outer join user_tb ut on (ut.user_id = glt.user_id)
				where
					ut.user_id = #{userId}
	    </select>
    
	    <select id="myGyms" parameterType="Integer" resultType="com.portfolio.healthmanagement.entity.MyGym">
			select
		   		gt.gym_id as gymId,
				gt.gym_name as gymName,
				gt.gym_address as gymAddress,
				gt.gym_tel as gymTel,
				gt.gym_price as gymPrice,
	    
	    		ut.user_id as userId
			from
	   			gym_owner_tb got 
		    	left outer join gym_tb gt on(got.gym_id = gt.gym_id)
		    	left outer join user_tb ut on(ut.user_id = got.user_id) 
		    where
				ut.user_id = #{userId}		
		</select>
    	
</mapper>

	